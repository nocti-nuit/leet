695. 岛屿的最大面积
给你一个大小为 m x n 的二进制矩阵 grid 。

岛屿 是由一些相邻的 1 (代表土地) 构成的组合，这里的「相邻」要求两个 1 必须在 水平或者竖直的四个方向上 相邻。你可以假设 grid 的四个边缘都被 0（代表水）包围着。

岛屿的面积是岛上值为 1 的单元格的数目。

计算并返回 grid 中最大的岛屿面积。如果没有岛屿，则返回面积为 0 。

 

示例 1：


输入：grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]
输出：6
解释：答案不应该是 11 ，因为岛屿只能包含水平或垂直这四个方向上的 1 。
示例 2：

输入：grid = [[0,0,0,0,0,0,0,0]]
输出：0

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/max-area-of-island
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution:
    def deepFirstSearch(self,grid,i,j)->int:#创建dfs函数
        #len(grid)默认返回行数，len(grid[0])选第0行求其列数，三四项判断是否已经搜索完
        if i <0 or j<0 or i==len(grid) or j==len(grid[0]) or grid[i][j]!=1:
            return 0
        grid[i][j]=0#把搜索过的数据置为0，防止重复
        ans=1
        for di,dj in [0,1],[0,-1],[-1,0],[1,0]:#沿上下左右四个方向搜索
            x,y=i+di,j+dj
            ans+=self.deepFirstSearch(grid,x,y)
        return ans
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        ans=0
        for i,l in enumerate(grid):#枚举每一行，i行下标（enumerate枚举函数）
            for j,n in enumerate(l):#枚举当前行的每列，j列下标
                ans=max(self.deepFirstSearch(grid,i,j),ans)
        return ans
