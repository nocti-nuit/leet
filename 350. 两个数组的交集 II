350. 两个数组的交集 II
给定两个数组，编写一个函数来计算它们的交集。

 

示例 1：

输入：nums1 = [1,2,2,1], nums2 = [2,2]
输出：[2,2]
示例 2:

输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]
输出：[4,9]
 

说明：

输出结果中每个元素出现的次数，应与元素在两个数组中出现次数的最小值一致。
我们可以不考虑输出结果的顺序。

class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        if len(nums1)>len(nums2):#只把短的数组存为hash减少内存消耗
            return self.intersect(nums2,nums1)
        hash={}
        for num in nums1:#遍历第一个数组，并在哈希表中记录第一个数组中的每一个数字以及对应出现的次数
            if num not in hash:
                hash[num]=1
            else:
                hash[num]+=1
        res=[]
        for num2 in nums2:#遍历第二个数组，对于第二个数组中的每个数字，如果在哈希表中存在这个数字则将该数字添加到答案，并减少哈希表中该数字出现的次数
            if num2 in hash and hash[num2]>0:
                res.append(num2)
                hash[num2]-=1
        return res
